{"version":3,"sources":["constants/index.js","store.js","components/MovieOverlay/MovieOverlayStyled.js","components/MovieOverlay/MovieOverlay.js","components/NavBar/NavBarStyled.js","components/NavBar/NavBar.js","components/Genre/GenreStyled.js","components/Genre/Genre.js","components/GenreList/GenreListStyled.js","components/GenreList/GenreList.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/SideBar/SideBarStyled.js","components/SideBar/SideBar.js","helpers/retrieve-data.js","helpers/load-or-retrieve.js","helpers/map-api-movie-to-local-movie.js","services/movie-service.js","components/Search/SearchStyled.js","components/Search/Search.js","components/Movie/MovieStyled.js","components/Movie/Movie.js","components/InfiniteScroll/InfiniteScroll.js","components/MovieList/MovieListStyled.js","components/MovieList/MovieList.js","hoc/with-spinner.js","components/Main/MainStyled.js","components/Main/Main.js","components/Body/BodyStyled.js","components/Body/Body.js","AppStyled.js","App.js","index.js"],"names":["API_PATH","API_KEY","process","addOrRemoveGenreFilter","filteredGenres","genreId","newFilteredGenres","Set","has","delete","add","filterMovies","movies","size","filter","movie","genres","some","item","reducer","state","action","type","payload","filteredMovies","currentPage","isSideBarVisible","searchedMovie","query","selectedMovie","isOverlayVisible","isSpinnerLoading","isLoadingMovies","initialState","map","genre","index","id","name","Context","createContext","ContextProvider","props","useReducer","dispatch","Provider","value","children","MovieOverlayStyled","styled","div","MovieOverlay","useContext","image","title","rate","release_date","overview","handleClose","onClick","className","e","stopPropagation","IconButton","src","alt","NavBarStyled","NavBar","GenreStyled","Genre","isFiltered","FormControlLabel","control","Checkbox","checked","onChange","label","GenreListStyled","GenreList","key","FilterStyled","Filter","SideBarStyled","visible","SideBar","urlToRetrieveFrom","responseHandler","a","data","axios","get","axiosResponse","console","error","localStorageKey","localStorage","getItem","JSON","parse","retrieveData","setItem","stringify","uuid","poster_path","vote_average","genre_ids","MovieService","retrieve","page","url","loadOrRetrieve","response","results","mapApiMovieToLocalMovie","search","searchQuery","encodeURI","load","cachedMovies","SearchStyled","Search","useState","searchInput","setSearchInput","handleSearch","trim","placeholder","target","autoFocus","MovieStyled","Movie","loading","InfiniteScroll","childRef","scrollOffset","onScroll","shouldScroll","useEffect","containerElement","current","handleScroll","lastChildElement","lastElementChild","undefined","lastChildHeight","offsetHeight","containerVisisbleHeight","scrollHeight","scrollTop","addEventListener","removeEventListener","propTypes","PropTypes","object","isRequired","number","func","bool","MovieListStyled","MovieList","divRef","useRef","handleLoadMovies","ref","CustomCirculaProgress","withStyles","root","color","margin","CirculaProgress","withSpinner","WrappedComponent","isLoading","otherProps","MainStyled","MovieListWithSpinner","Main","BodyStyled","Body","AppStyled","App","loadTopRatedMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5319a45.chunk.js","sourcesContent":["// Movie db API\nexport const API_PATH = 'https://api.themoviedb.org/3';\nexport const API_IMAGE_PATH = 'https://image.tmdb.org/t/p/w500';\nexport const API_KEY = process.env.REACT_APP_MOVIE_DB_API_KEY;\nexport const API_TOP_RATED_PATH = '/movie/top_rated';\nexport const API_SEARCH_PATH = '/search/movie';\n\nexport const GENRES = [\n    \"Action\",\n    \"Adventure\",\n    \"Animation\",\n    \"Comedy\",\n    \"Crime\",\n    \"Documentary\",\n    \"Drama\",\n    \"Family\",\n    \"Fantasy\",\n    \"History\",\n    \"Horror\",\n    \"Music\",\n    \"Mystery\",\n    \"Romance\",\n    \"Science Fiction\",\n    \"TV Movie\",\n    \"Thriller\",\n    \"War\",\n    \"Western\"\n];\n\n// Local storage\nexport const LOCAL_STORAGE_MOVIES = 'ls_movies';\n\nexport const DEFAULT_IMAGE = process.env.PUBLIC_URL + '/default.png';","import React, { createContext, useReducer } from 'react';\n\nimport { GENRES } from './constants';\n\n// Action types\nexport const ADD_OR_REMOVE_GENRE_FILTER = 'ADD_OR_REMOVE_GENRE_FILTER';\nexport const SET_MOVIES = 'SET_MOVIES';\nexport const SEARCH_MOVIES = 'SEARCH_MOVIES';\nexport const SET_SEARCHED_MOVIE = 'SET_SEARCHED_MOVIE';\nexport const FILTER_MOVIES = 'FILTER_MOVIES';\nexport const LOAD_MOVIES = 'LOAD_MOVIES';\nexport const OPEN_OVERLAY = 'OPEN_OVERLAY';\nexport const CLOSE_OVERLAY = 'CLOSE_OVERLAY';\nexport const OPEN_SIDEBAR = 'OPEN_SIDEBAR';\nexport const CLOSE_SIDEBAR = 'CLOSE_SIDEBAR';\nexport const SET_SPINNER_LOADING = 'SET_SPINNER_LOADING';\nexport const SET_LOADING_MOVIES = 'SET_LOADING_MOVIES';\n\nconst addOrRemoveGenreFilter = (filteredGenres, genreId) => {\n    const newFilteredGenres = new Set(filteredGenres);\n    if (filteredGenres.has(genreId)) {\n        newFilteredGenres.delete(genreId);\n    } else {\n        newFilteredGenres.add(genreId);\n    }\n    return newFilteredGenres;\n};\n\nconst filterMovies = (movies, filteredGenres) => {\n    let filteredMovies = [];\n\n    if (filteredGenres.size === 0) {\n        filteredMovies = [...movies];\n    } else {\n        filteredMovies = movies.filter((movie) => {\n            const { genres } = movie;\n            return genres.some((item) => filteredGenres.has(item));\n        });\n    }\n\n    return filteredMovies;\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case ADD_OR_REMOVE_GENRE_FILTER: {\n            return { ...state, filteredGenres: addOrRemoveGenreFilter(state.filteredGenres, action.payload) };\n        }\n        case SET_MOVIES: {\n            return {\n                ...state,\n                movies: action.payload,\n                filteredMovies: action.payload,\n                filteredGenres: new Set(),\n                currentPage: 2\n            };\n        }\n        case FILTER_MOVIES: {\n            return {\n                ...state,\n                filteredMovies: filterMovies(state.movies, state.filteredGenres),\n                isSideBarVisible: false\n            };\n        }\n        case SEARCH_MOVIES: {\n            return {\n                ...state,\n                movies: action.payload.movies,\n                filteredMovies: action.payload.movies,\n                filteredGenres: new Set(),\n                searchedMovie: action.payload.query,\n                currentPage: 2\n            };\n        }\n        case LOAD_MOVIES: {\n            return {\n                ...state,\n                movies: [...state.movies, ...action.payload],\n                filteredMovies: [...state.filteredMovies, ...filterMovies(action.payload, state.filteredGenres)],\n                currentPage: state.currentPage + 1\n            };\n        }\n        case OPEN_OVERLAY: {\n            return {\n                ...state,\n                selectedMovie: action.payload,\n                isOverlayVisible: true\n            }\n        }\n        case CLOSE_OVERLAY: {\n            return {\n                ...state,\n                selectedMovie: null,\n                isOverlayVisible: false\n            };\n        }\n        case OPEN_SIDEBAR: {\n            return { ...state, isSideBarVisible: true };\n        }\n        case CLOSE_SIDEBAR: {\n            return { ...state, isSideBarVisible: false };\n        }\n        case SET_SPINNER_LOADING:\n            return { ...state, isSpinnerLoading: !state.isSpinnerLoading };\n        case SET_LOADING_MOVIES: {\n            return { ...state, isLoadingMovies: !state.isLoadingMovies };\n        }\n        default:\n            return state;\n    }\n};\n\nconst initialState = {\n    genres: GENRES.map((genre, index) => ({ id: index + 1, name: genre })),\n    filteredGenres: new Set(),\n    movies: [],\n    filteredMovies: [],\n    selectedMovie: null,\n    currentPage: 1,\n    searchedMovie: '',\n    isOverlayVisible: false,\n    isSideBarVisible: false,\n    isSpinnerLoading: false,\n    isLoadingMovies: false\n};\n\nexport const Context = createContext();\n\nexport const ContextProvider = props => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return (\n        <Context.Provider value={{ state, dispatch }}>\n            {props.children}\n        </Context.Provider>\n    );\n};","import styled from 'styled-components';\n\nconst MovieOverlayStyled = styled.div`\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, .5);\n    z-index: 2;\n\n    .container-box {\n        background-color: white;\n        position: fixed;\n        top: 2.5rem;\n        left: 2.5rem;\n        bottom: 2.5rem;\n        right: 2.5rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        padding: 1rem;\n\n        .close {\n            color: black;\n            position: absolute;\n            /* button width is 48px */\n            top: -20px;\n            right: -20px;\n            z-index: 2;\n        }\n\n        img {\n            max-width: 100%;\n        }\n\n        .content {\n            display: flex;\n            flex-direction: column;\n\n            .header {\n                display: flex;\n                align-items: center;\n                width: 100%;\n                margin-top: 1.5rem;\n\n                .title-date {\n                    display: flex;\n                    flex-direction: column;\n\n                    .title {\n                        font-size: .9rem;\n                    }\n\n                    .date {\n                        margin-top: .25rem;\n                        font-size: .7rem;\n                    }\n                }\n\n                .rate {\n                    margin-left: auto;\n                    background-color: var(--secundary-color);\n                    border: 1px solid var(--border-secundary-color);\n                    padding: .5rem;\n                    border-radius: 2.5px;\n                }\n            }\n\n            .overview {\n                margin: 1.5rem 0;\n                font-size: .8rem;\n            }\n\n            .actions {\n                width: 100%;\n                margin-top: auto;\n                display: flex;\n                flex-direction: column;\n\n                button {\n                    cursor: pointer;\n                    padding: .5rem 1rem;\n                    border: none;\n\n                    &.offline {\n                        background-color: var(--primary-color);\n                        border: 1px solid var(--border-primary-color);\n                        margin-bottom: .25rem;\n                    }\n\n                    &.online {\n                        background-color: var(--secundary-color);\n                        border: 1px solid var(--border-secundary-color);\n                        margin-top: .25rem;\n                    }\n                }\n            }\n        }\n    }\n\n    @media (min-width: 336px) {\n        .container-box {\n            .content {\n                .actions {\n                    flex-direction: row;\n                    justify-content: space-evenly;\n\n                    button.offline {\n                        margin-bottom: 0;\n                    }\n\n                    button.online {\n                        margin-top: 0;\n                    }\n                }\n            }\n        }\n    }\n\n    @media (min-width: 650px) {\n        .container-box {\n            flex-direction: row;\n            height: 450px;\n            margin: auto;\n            padding: 1rem 0;\n\n            img {\n                width: 40%;\n                height: 100%;\n                padding: 0 1rem;\n            }\n\n            .content {\n                width: 60%;\n                height: 100%;\n                padding: 0 1rem;\n\n                .header {\n                    .title-date {\n                        .title {\n                            font-size: 1.2rem;\n                        }\n\n                        .date {\n                            font-size: .75rem;\n                        }\n                    }\n\n                    .rate {\n                        margin-left: auto;\n                        padding: .5rem;\n                        border-radius: 2.5px;\n                    }\n                }\n\n                .overview {\n                    font-size: 1rem;\n                }\n            }\n        }\n    }\n\n    @media (min-width: 1024px) {\n        .container-box {\n            width: 80%;\n        }\n    }\n\n    @media(min-width: 1200px) {\n        .container-box {\n            width: 60%;\n        }\n    }\n`;\n\nexport default MovieOverlayStyled;","import React, { useContext } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nimport {\n    CLOSE_OVERLAY,\n    Context\n} from '../../store';\n\nimport MovieOverlayStyled from './MovieOverlayStyled';\n\nconst MovieOverlay = () => {\n    const { state, dispatch } = useContext(Context);\n    const { selectedMovie: { image, title, rate, release_date, overview } } = state;\n\n    const handleClose = () => {\n        dispatch({ type: CLOSE_OVERLAY })\n    };\n\n    return (\n        <MovieOverlayStyled onClick={handleClose}>\n            <div className=\"container-box\" onClick={(e) => e.stopPropagation()}>\n                <IconButton className=\"close\" onClick={handleClose}>\n                    <CancelIcon />\n                </IconButton>\n                <img src={image} alt={title} />\n                <div className=\"content\">\n                    <div className=\"header\">\n                        <div className=\"title-date\">\n                            <span className=\"title\">{title}</span>\n                            <span className=\"date\">{release_date}</span>\n                        </div>\n                        <span className=\"rate\">{rate}</span>\n                    </div>\n                    <div className=\"overview\">\n                        {overview}\n                    </div>\n                    <div className=\"actions\">\n                        <button className=\"offline\">Watch Offline</button>\n                        <button className=\"online\">Watch Online</button>\n                    </div>\n                </div>\n            </div>\n        </MovieOverlayStyled>\n    );\n};\n\nexport default MovieOverlay;","import styled from 'styled-components';\n\nconst NavBarStyled = styled.div`\n    min-height: 48px;\n    display: flex;\n    align-items: center;\n    padding: 0 1rem;\n    background-color: var(--primary-color);\n    border-bottom: 1px solid var(--border-primary-color);\n    box-shadow: 0 5px 8px rgba(var(--dark-gray), .1);\n\n    .title {\n        font-size: 1.5rem;\n        cursor: pointer;\n    }\n\n    .menu-icon {\n        margin-left: auto;\n\n        & svg {\n            color: rgb(var(--dark-gray));\n        }\n    }\n\n    @media (min-width: 768px) {\n        display: none;\n    }\n`;\n\nexport default NavBarStyled;","import React, { useContext } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport {\n    OPEN_SIDEBAR,\n    Context\n} from '../../store';\n\nimport NavBarStyled from './NavBarStyled';\n\nconst NavBar = () => {\n    const { dispatch } = useContext(Context);\n\n    return (\n        <NavBarStyled>\n            <h1 className=\"title\">Movie Finder</h1>\n            <IconButton className=\"menu-icon\" onClick={() => dispatch({ type: OPEN_SIDEBAR })}>\n                <MenuIcon />\n            </IconButton>\n        </NavBarStyled>\n    );\n};\n\nexport default NavBar;","import styled from 'styled-components';\n\nconst GenreStyled = styled.div`\n    & svg {\n        color: rgb(var(--dark-gray));\n    }\n`;\n\nexport default GenreStyled;","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {\n    ADD_OR_REMOVE_GENRE_FILTER,\n    Context\n} from '../../store';\n\nimport GenreStyled from './GenreStyled';\n\nconst Genre = ({ id, name, isFiltered }) => {\n    const { dispatch } = useContext(Context);\n\n    return (\n        <GenreStyled>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={isFiltered}\n                        onChange={() => dispatch({ type: ADD_OR_REMOVE_GENRE_FILTER, payload: id })} />\n                }\n                label={name}\n            />\n        </GenreStyled>\n    );\n};\n\nGenre.propTypes = {\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    isFiltered: PropTypes.bool\n};\n\nexport default Genre;","import styled from 'styled-components';\n\nconst GenreListStyled = styled.div`\n    margin-bottom: 1rem;\n    overflow-y: scroll;\n\n    .title {\n        font-size: 1.5rem;\n        margin-bottom: 1rem;\n    }\n\n    .genres {\n        overflow-y: scroll;\n    }\n\n    @media (min-width: 650px) {\n        .genres {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n        }\n    }\n\n    @media (min-width: 768px) {\n        .genres {\n            display: block;\n        }\n    }\n`;\n\nexport default GenreListStyled;","import React, { useContext } from 'react';\n\nimport Genre from '../Genre/Genre';\n\nimport {\n    Context\n} from '../../store';\n\nimport GenreListStyled from './GenreListStyled';\n\nconst GenreList = () => {\n    const { state } = useContext(Context);\n    const { genres, filteredGenres } = state;\n\n    return (\n        <GenreListStyled>\n            <h1 className=\"title\">Genres</h1>\n            <div className=\"genres\">\n            {\n                genres.map((genre) => (\n                    <Genre\n                        key={genre.id}\n                        isFiltered={filteredGenres.has(genre.id)}\n                        {...genre}\n                    />\n                ))\n            }\n            </div>\n        </GenreListStyled>\n    );\n};\n\nexport default GenreList;","import styled from 'styled-components';\n\nconst FilterStyled = styled.div`\n    padding: 1rem;\n    height: 100%;\n\n    .container {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n\n        .filter {\n            margin-top: auto;\n            padding: .5rem 0;\n            border: 1px solid black;\n            background-color: var(--primary-color);\n            border: 1px solid var(--border-primary-color);\n            font-size: 1rem;\n            border-radius: 5px;\n            cursor: pointer;\n        }\n    }\nß\n    @media (min-width: 650px) {\n        height: 100%;\n        justify-content: space-between;\n    }\n\n    @media (min-width: 768px) {\n        margin: 0;\n    }\n`;\n\nexport default FilterStyled;","import React, { useContext } from 'react';\n\nimport GenreList from '../GenreList/GenreList';\n\nimport {\n    FILTER_MOVIES,\n    Context\n} from '../../store';\n\nimport FilterStyled from './FilterStyled';\n\nconst Filter = () => {\n    const { dispatch } = useContext(Context);\n\n    return (\n        <FilterStyled>\n            <div className=\"container\">\n                <GenreList />\n                <button className=\"filter\" onClick={() => dispatch({ type: FILTER_MOVIES })}>Filter</button>\n            </div>\n        </FilterStyled>\n    );\n};\n\nexport default Filter;","import styled from 'styled-components';\n\nconst SideBarStyled = styled.div`\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: var(--secundary-color);\n    border-right: 1px solid var(--border-secundary-color);\n    padding: 1.5rem 1rem;\n    z-index: 1;\n    display: ${props => props.visible ? 'inline-block' : 'none'};\n\n    .close {\n        display: flex;\n\n        button {\n            margin-left: auto;\n            width: 24px;\n            height: 24px;\n        }\n    }\n\n    @media (min-width: 768px) {\n        width: 30%;\n        max-height: 100%;\n        display: inline-block;\n        position: unset;\n        padding: 0;\n\n        .close {\n            display: none;\n        }\n    }\n\n    @media (min-width: 1200px) {\n        width: 20%;\n    }\n`;\n\nexport default SideBarStyled;","import React, { useContext } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Filter from '../Filter/Filter';\n\nimport {\n    CLOSE_SIDEBAR,\n    Context\n} from '../../store';\n\nimport SideBarStyled from './SideBarStyled';\n\nconst SideBar = () => {\n    const { state, dispatch } = useContext(Context);\n    const { isSideBarVisible } = state;\n\n    return (\n        <SideBarStyled visible={isSideBarVisible}>\n            <div className=\"close\">\n                <IconButton onClick={() => dispatch({ type: CLOSE_SIDEBAR })}>\n                    <CloseIcon />\n                </IconButton>\n            </div>\n            <Filter />\n        </SideBarStyled>\n    );\n};\n\nexport default SideBar;","import axios from 'axios';\n\nexport default async (urlToRetrieveFrom, responseHandler) => {\n    let data = [];\n    try {\n        const axiosResponse = await axios.get(urlToRetrieveFrom);\n        data = responseHandler(axiosResponse.data);\n    } catch (err) {\n        console.error(err);\n    }\n\n    return data;\n};","import retrieveData from './retrieve-data'\n\nexport default async (localStorageKey, urlToRetrieveFrom, responseHandler) => {\n    if (localStorage.getItem(localStorageKey)) {\n        const data = JSON.parse(localStorage.getItem(localStorageKey));\n        return data;\n    }\n\n    const data = await retrieveData(urlToRetrieveFrom, responseHandler);\n    localStorage.setItem(localStorageKey, JSON.stringify(data));\n    return data;\n};","import uuid from 'react-uuid';\n\nimport {\n    API_IMAGE_PATH,\n    DEFAULT_IMAGE\n} from '../constants';\n\nexport default (movie) => {\n    return {\n        id: uuid(),\n        image: movie.poster_path ? `${API_IMAGE_PATH}/${movie.poster_path}` : DEFAULT_IMAGE,\n        title: movie.title,\n        rate: movie.vote_average,\n        release_date: movie.release_date,\n        overview: movie.overview,\n        genres: movie.genre_ids\n    };\n};","import loadOrRetrieve from '../helpers/load-or-retrieve';\nimport retrieveData from '../helpers/retrieve-data';\nimport mapApiMovieToLocalMovie from '../helpers/map-api-movie-to-local-movie';\n\nimport {\n    API_PATH,\n    API_KEY,\n    API_TOP_RATED_PATH,\n    API_SEARCH_PATH,\n    LOCAL_STORAGE_MOVIES,\n} from '../constants';\n\nclass MovieService {\n    static retrieve = async (page = 1) => {\n        const url = `${API_PATH}${API_TOP_RATED_PATH}?api_key=${API_KEY}&page=${page}`;\n        const movies = await loadOrRetrieve(LOCAL_STORAGE_MOVIES, url, (response) => {\n            const movies = response.results;\n            return movies.map(mapApiMovieToLocalMovie);\n        });\n        return movies;\n    }\n\n    static search = async (query, page = 1) => {\n        const searchQuery = encodeURI(query);\n        const url = `${API_PATH}${API_SEARCH_PATH}?api_key=${API_KEY}&query=${searchQuery}&page=${page}`;\n        const movies = await retrieveData(url, (response) => {\n            const movies = response.results;\n            return movies.map(mapApiMovieToLocalMovie);\n        });\n        localStorage.setItem(LOCAL_STORAGE_MOVIES, JSON.stringify(movies));\n        return movies;\n    }\n\n    static load = async (searchQuery, page) => {\n        let url = '';\n        if (searchQuery === '') {\n            url = `${API_PATH}${API_TOP_RATED_PATH}?api_key=${API_KEY}&page=${page}`;\n        } else {\n            url = `${API_PATH}${API_SEARCH_PATH}?api_key=${API_KEY}&query=${searchQuery}&page=${page}`;\n        }\n\n        const movies = await retrieveData(url, (response) => {\n            const movies = response.results;\n            return movies.map(mapApiMovieToLocalMovie);\n        });\n\n        const cachedMovies = JSON.parse(localStorage.getItem(LOCAL_STORAGE_MOVIES));\n        localStorage.setItem(LOCAL_STORAGE_MOVIES, JSON.stringify([...cachedMovies, ...movies]));\n\n        return movies;\n    };\n}\n\nexport default MovieService;","import styled from 'styled-components';\n\nconst SearchStyled = styled.div`\n    width: 100%;\n    display: flex;\n    margin: 1rem 0;\n\n    .search {\n        flex: 1;\n        padding-right: 1rem;\n\n        input[type=text] {\n            width: 100%;\n            height: 100%;\n            padding-left: 1rem;\n            font-size: .9rem;\n            color: var(--dark-gray);\n            border: none;\n            border-left: 2px solid var(--border-secundary-color);\n        }\n    }\n\n    .search-icon {\n        background-color: var(--secundary-color);\n\n        & svg {\n            color: rgb(var(--dark-gray));\n        }\n    }\n\n    @media (min-width: 768px) {\n        margin-top: 1.5rem;\n\n        .search {\n            input[type=text] {\n                border: 2px solid var(--border-secundary-color);\n            }\n        }\n    }\n`;\n\nexport default SearchStyled;","import React, { useContext, useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport {\n    SET_SPINNER_LOADING,\n    SEARCH_MOVIES,\n    Context\n} from '../../store';\n\nimport MovieService from '../../services/movie-service';\n\nimport SearchStyled from './SearchStyled';\n\nconst Search = () => {\n    const { dispatch } = useContext(Context);\n\n    const [searchInput, setSearchInput] = useState('');\n\n    const handleChange = (e) => {\n        const { value } = e.target;\n        setSearchInput(value);\n    };\n\n    const handleSearch = async () => {\n        if (searchInput === '') return;\n\n        const query = searchInput.trim();\n        dispatch({ type: SET_SPINNER_LOADING });\n        const movies = await MovieService.search(query);\n        dispatch({ type: SEARCH_MOVIES, payload: { movies, query } });\n        dispatch({ type: SET_SPINNER_LOADING });\n\n        setSearchInput('');\n    };\n\n    return (\n        <SearchStyled>\n            <div className=\"search\">\n                <input type=\"text\" placeholder=\"Search movie\" value={searchInput} onChange={handleChange} autoFocus />\n            </div>\n            <IconButton className=\"search-icon\" onClick={handleSearch}>\n                <SearchIcon />\n            </IconButton>\n        </SearchStyled>\n    );\n};\n\nexport default Search;","import styled from 'styled-components';\n\nconst MovieStyled = styled.div`\n    width: 100%;\n    height: 350px;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid var(--border-secundary-color);\n    border-radius: 5px;\n    box-shadow: 3px 3px 3px rgba(var(--dark-gray), .1);\n\n    img {\n        width: 100%;\n        min-height: 250px;\n        cursor: pointer;\n    }\n\n    .content {\n        padding: 1rem .5rem;\n        flex: 1;\n        display: flex;\n        align-items: center;\n        max-height: 100px;\n\n        .header {\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            width: 100%;\n            max-height: 100%;\n            overflow: hidden;\n\n            .title {\n                font-size: .9rem;\n                font-weight: bolder;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                margin-right: 1rem;\n            }\n\n            .rate {\n                margin-left: auto;\n                background-color: var(--secundary-color);\n                padding: .5rem;\n                border: 1px solid var(--border-secundary-color);\n                border-radius: 5px;\n            }\n        }\n\n        .overview {\n            display: none;\n        }\n    }\n\n    @media (min-width: 768px) {\n        flex-direction: row;\n        height: 300px;\n\n        img {\n            width: 35%;\n            height: 100%;\n        }\n\n        .content {\n            width: 65%;\n            min-height: 100%;\n            flex-direction: column;\n            padding: 1rem;\n            border-left: 1px solid var(--border-secundary-color);\n\n            .header {\n                width: 100%;\n\n                title {\n                    font-size: 1rem;\n                }\n            }\n\n            .overview {\n                display: block;\n                margin-top: 1.1rem;\n                font-size: .85rem;\n            }\n        }\n    }\n`;\n\nexport default MovieStyled;","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    OPEN_OVERLAY,\n    Context\n} from '../../store';\n\nimport MovieStyled from './MovieStyled';\n\nconst Movie = ({ movie }) => {\n    const { dispatch } = useContext(Context);\n\n    const { image, title, rate, overview } = movie;\n\n    return (\n        <MovieStyled>\n            <img src={image} alt={title} onClick={() => dispatch({ type: OPEN_OVERLAY, payload: movie })} loading=\"lazy\" />\n            <div className=\"content\">\n                <div className=\"header\">\n                    <span className=\"title\">{title}</span>\n                    <span className=\"rate\">{rate}</span>\n                </div>\n                <div className=\"overview\">{overview}</div>\n            </div>\n        </MovieStyled>\n    );\n};\n\nMovie.propTypes = {\n    movie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        image: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        rate: PropTypes.number.isRequired,\n        release_date: PropTypes.string.isRequired,\n        overview: PropTypes.string.isRequired\n    }).isRequired\n};\n\nexport default Movie;","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst InfiniteScroll = ({ childRef, scrollOffset, onScroll, shouldScroll, children }) => {\n    useEffect(() => {\n        const containerElement = childRef.current;\n\n        const handleScroll = () => {\n            if (!shouldScroll) return;\n\n            const lastChildElement = containerElement.lastElementChild;\n            // If there are no elements while applying filters, don't scroll.\n            if (lastChildElement === undefined) {\n                return;\n            }\n\n            const lastChildHeight = lastChildElement.offsetHeight;\n            const containerVisisbleHeight = containerElement.offsetHeight;\n            const containerScrollHeight = containerElement.scrollHeight;\n            const containerScrollOffset = containerElement.scrollTop + containerVisisbleHeight;\n\n            const shouldLoad = (containerScrollHeight - containerScrollOffset) <= (lastChildHeight / 2);\n            if (shouldLoad) onScroll();\n        };\n\n        containerElement.addEventListener('scroll', handleScroll, false);\n\n        return () => {\n            containerElement.removeEventListener('scroll', handleScroll, false);\n        };\n    }, [childRef, scrollOffset, onScroll, shouldScroll]);\n\n    return (\n        <>\n            {children}\n        </>\n    );\n};\n\nInfiniteScroll.propTypes = {\n    childRef: PropTypes.object.isRequired,\n    scrollOffset: PropTypes.number.isRequired,\n    onScroll: PropTypes.func.isRequired,\n    shouldScroll: PropTypes.bool.isRequired\n};\n\nexport default InfiniteScroll;","import styled from 'styled-components';\n\nconst MovieListStyled = styled.div`\n    max-height: 100%;\n    display: grid;\n    grid-template-columns: repeat(1, 1fr);\n    grid-gap: 1rem;\n    margin: 1rem 0;\n    overflow-y: scroll;\n\n    .load-more {\n        cursor: pointer;\n        padding: .5rem 1rem;\n        border: none;\n        background-color: var(--primary-color);\n        font-size: 1rem;\n        margin-top: 1rem;\n        grid-column: span 2;\n    }\n\n    @media (min-width: 450px) {\n        grid-template-columns: repeat(2, 1fr);\n\n        .load-more {\n            grid-column: span 3;\n        }\n    }\n\n    @media (min-width: 650px) {\n        grid-template-columns: repeat(3, 1fr);\n\n        .load-more {\n            grid-column: span 4;\n        }\n    }\n\n    @media (min-width: 768px) {\n        grid-template-columns: repeat(1, 1fr);\n\n        .load-more {\n            grid-column: span 1;\n        }\n    }\n\n    @media (min-width: 1200px) {\n        grid-template-columns: repeat(2, 1fr);\n\n        .load-more {\n            grid-column: span 2;\n        }\n    }\n`;\n\nexport default MovieListStyled;","import React, { useContext, useRef } from 'react';\n\nimport Movie from '../Movie/Movie';\nimport InfiniteScroll from '../InfiniteScroll/InfiniteScroll';\n\nimport {\n    SET_LOADING_MOVIES,\n    LOAD_MOVIES,\n    Context\n} from '../../store';\n\nimport MovieService from '../../services/movie-service';\n\nimport MovieListStyled from './MovieListStyled';\n\nconst MovieList = () => {\n    const { state, dispatch } = useContext(Context);\n    const { filteredMovies: movies, currentPage, searchedMovie, isLoadingMovies } = state;\n\n    const divRef = useRef();\n\n    const _scrollToLoad = 50;\n\n    const handleLoadMovies = async (page) => {\n        dispatch({ type: SET_LOADING_MOVIES });\n        const movies = await MovieService.load(searchedMovie, page);\n        dispatch({ type: LOAD_MOVIES, payload: movies });\n        dispatch({ type: SET_LOADING_MOVIES });\n    };\n\n    return (\n        <MovieListStyled ref={divRef}>\n            <InfiniteScroll childRef={divRef} scrollOffset={_scrollToLoad} onScroll={() => handleLoadMovies(currentPage)} shouldScroll={!isLoadingMovies}>\n                { movies.map((movie) => <Movie key={movie.id} movie={movie} />) }\n            </InfiniteScroll>\n        </MovieListStyled>\n    );\n};\n\nexport default MovieList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CirculaProgress from '@material-ui/core/CircularProgress';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst CustomCirculaProgress = withStyles({\n    root: {\n        color: '#888888',\n        margin: 'auto'\n    }\n})(CirculaProgress);\n\nconst withSpinner = (WrappedComponent) => {\n    const Spinner = ({ isLoading, ...otherProps }) => {\n        return isLoading\n            ? <CustomCirculaProgress />\n            : <WrappedComponent {...otherProps} />\n    }\n\n    Spinner.propTypes = {\n        isLoading: PropTypes.bool.isRequired\n    };\n\n    return Spinner;\n};\n\nexport default withSpinner;","import styled from 'styled-components';\n\nconst MainStyled = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    padding: 0 2rem;\n\n    @media (min-width: 768px) {\n        width: 70%;\n    }\n\n    @media (min-width: 1200px) {\n        width: 80%;\n    }\n`;\n\nexport default MainStyled;","import React, { useContext } from 'react';\n\nimport Search from '../Search/Search';\nimport MovieList from '../MovieList/MovieList';\n\nimport withSpinner from '../../hoc/with-spinner';\n\nimport { Context } from '../../store';\n\nimport MainStyled from './MainStyled';\n\nconst MovieListWithSpinner = withSpinner(MovieList);\n\nconst Main = () => {\n    const { state } = useContext(Context);\n\n    return (\n        <MainStyled>\n            <Search />\n            <MovieListWithSpinner isLoading={state.isSpinnerLoading} />\n        </MainStyled>\n    );\n};\n\nexport default Main;","import styled from 'styled-components';\n\nconst BodyStyled = styled.div`\n    width: 100%;\n    max-height: 100%;\n    display: flex;\n`;\n\nexport default BodyStyled;","import React from 'react';\n\nimport SideBar from '../SideBar/SideBar';\nimport Main from '../Main/Main';\n\nimport BodyStyled from './BodyStyled';\n\nconst Body = () => (\n    <BodyStyled>\n        <SideBar />\n        <Main />\n    </BodyStyled>\n);\n\nexport default Body;","import styled from 'styled-components';\n\nconst AppStyled = styled.div`\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n\n    .body {\n        display: flex;\n        flex-direction: column;\n    }\n`;\n\nexport default AppStyled;","import React, { useContext, useEffect } from 'react';\n\nimport MovieOverlay from './components/MovieOverlay/MovieOverlay';\nimport NavBar from './components/NavBar/NavBar';\nimport Body from './components/Body/Body';\n\nimport {\n    SET_MOVIES,\n    SET_SPINNER_LOADING,\n    Context\n} from './store';\n\nimport MovieService from './services/movie-service';\n\nimport AppStyled from './AppStyled';\n\nconst App = () => {\n    const { state, dispatch } = useContext(Context);\n\n    useEffect(() => {\n        const loadTopRatedMovies = async () => {\n            dispatch({ type: SET_SPINNER_LOADING });\n            const movies = await MovieService.retrieve();\n            dispatch({ type: SET_MOVIES, payload: movies });\n            dispatch({ type: SET_SPINNER_LOADING });\n        };\n\n        loadTopRatedMovies();\n    }, [dispatch]);\n\n    const { isOverlayVisible } = state;\n\n    return (\n        <AppStyled>\n            { isOverlayVisible && <MovieOverlay /> }\n            <NavBar />\n            <Body />\n        </AppStyled>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport { ContextProvider } from './store';\n\nimport 'fontsource-roboto';\n\nimport './index.css';\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}