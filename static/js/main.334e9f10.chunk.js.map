{"version":3,"sources":["store.js","components/MovieOverlay/MovieOverlayStyled.js","components/MovieOverlay/MovieOverlay.js","components/NavBar/NavBarStyled.js","components/NavBar/NavBar.js","components/Genre/Genre.js","components/GenreList/GenreListStyled.js","components/GenreList/GenreList.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/SideBar/SideBarStyled.js","components/SideBar/SideBar.js","helpers/retrieve-data.js","constants/index.js","helpers/map-api-movie-to-local-movie.js","components/Search/SearchStyled.js","components/Search/Search.js","components/Movie/MovieStyled.js","components/Movie/Movie.js","components/MovieList/MovieListStyled.js","components/MovieList/MovieList.js","components/Body/BodyStyled.js","components/Body/Body.js","AppStyled.js","App.js","index.js"],"names":["addOrRemoveGenreFilter","filteredGenres","genreId","newFilteredGenres","Set","has","delete","add","reducer","state","action","type","genres","payload","movies","filteredMovies","size","filter","movie","some","item","isSideBarVisible","selectedMovie","isOverlayVisible","initialState","Context","createContext","ContextProvider","props","useReducer","dispatch","Provider","value","children","MovieOverlayStyled","styled","div","MovieOverlay","useContext","image","title","rate","release_date","overview","handleClose","onClick","className","e","stopPropagation","IconButton","src","alt","NavBarStyled","NavBar","style","color","Genre","id","name","isFiltered","FormControlLabel","control","Checkbox","checked","onChange","label","GenreListStyled","GenreList","map","genre","key","FilterStyled","Filter","SideBarStyled","SideBar","urlToRetrieveFrom","responseHandler","a","data","axios","get","axiosResponse","console","error","API_PATH","API_KEY","process","poster_path","vote_average","genre_ids","SearchStyled","Search","useState","searchInput","setSearchInput","handleSearch","searchQuery","encodeURI","trim","searchUrl","retrieveData","response","results","mapApiMovieToLocalMovie","placeholder","target","autoFocus","MovieStyled","Movie","MovieListStyled","MovieList","BodyStyled","Body","AppStyled","App","useEffect","loadFromLocalStorageOrRetrieveData","localStorageKey","localStorage","getItem","JSON","parse","setItem","stringify","loadGenres","genresUrl","loadTopRatedMovies","topRatedMoviesUrl","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.334e9f10.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\n// Action types\nexport const SET_GENRES = 'SET_GENRES';\nexport const ADD_OR_REMOVE_GENRE_FILTER = 'ADD_OR_REMOVE_GENRE_FILTER';\nexport const SET_MOVIES = 'SET_MOVIES';\nexport const FILTER_MOVIES = 'FILTER_MOVIES';\nexport const OPEN_OVERLAY = 'OPEN_OVERLAY';\nexport const CLOSE_OVERLAY = 'CLOSE_OVERLAY';\nexport const OPEN_SIDEBAR = 'OPEN_SIDEBAR';\nexport const CLOSE_SIDEBAR = 'CLOSE_SIDEBAR';\n\nconst addOrRemoveGenreFilter = (filteredGenres, genreId) => {\n    const newFilteredGenres = new Set(filteredGenres);\n    if (filteredGenres.has(genreId)) {\n        newFilteredGenres.delete(genreId);\n    } else {\n        newFilteredGenres.add(genreId);\n    }\n    return newFilteredGenres;\n};\n\nconst filterMovies = (movies, filteredGenres) => {\n    let filteredMovies = [];\n\n    if (filteredGenres.size === 0) {\n        filteredMovies = [...movies];\n    } else {\n        filteredMovies = movies.filter((movie) => {\n            const { genres } = movie;\n            return genres.some((item) => filteredGenres.has(item));\n        });\n    }\n\n    return filteredMovies;\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case SET_GENRES: {\n            return { ...state, genres: action.payload };\n        }\n        case ADD_OR_REMOVE_GENRE_FILTER: {\n            return { ...state, filteredGenres: addOrRemoveGenreFilter(state.filteredGenres, action.payload) };\n        }\n        case SET_MOVIES: {\n            return {\n                ...state,\n                movies: action.payload,\n                filteredMovies: action.payload,\n                filteredGenres: new Set()\n            };\n        }\n        case FILTER_MOVIES: {\n            return {\n                ...state,\n                filteredMovies: filterMovies(state.movies, state.filteredGenres),\n                isSideBarVisible: false\n            };\n        }\n        case OPEN_OVERLAY: {\n            return {\n                ...state,\n                selectedMovie: action.payload,\n                isOverlayVisible: true\n            }\n        }\n        case CLOSE_OVERLAY: {\n            return {\n                ...state,\n                selectedMovie: null,\n                isOverlayVisible: false\n            };\n        }\n        case OPEN_SIDEBAR: {\n            return { ...state, isSideBarVisible: true };\n        }\n        case CLOSE_SIDEBAR: {\n            return { ...state, isSideBarVisible: false };\n        }\n        default:\n            return state;\n    }\n};\n\nconst initialState = {\n    genres: [],\n    filteredGenres: new Set(),\n    movies: [],\n    filteredMovies: [],\n    selectedMovie: null,\n    isOverlayVisible: false,\n    isSideBarVisible: false\n};\n\nexport const Context = createContext();\n\nexport const ContextProvider = props => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return (\n        <Context.Provider value={{ state, dispatch }}>\n            {props.children}\n        </Context.Provider>\n    );\n};","import styled from 'styled-components';\n\nconst MovieOverlayStyled = styled.div`\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, .5);\n    z-index: 1;\n\n    .container-box {\n        background-color: white;\n        position: fixed;\n        top: 2.5rem;\n        left: 2.5rem;\n        bottom: 2.5rem;\n        right: 2.5rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        padding: 1rem;\n\n        .close {\n            color: black;\n            position: absolute;\n            /* button width is 48px */\n            top: -20px;\n            right: -20px;\n            z-index: 2;\n        }\n\n        img {\n            max-width: 100%;\n        }\n\n        .content {\n            display: flex;\n            flex-direction: column;\n\n            .header {\n                display: flex;\n                align-items: center;\n                width: 100%;\n                margin-top: 1.5rem;\n\n                .title-date {\n                    display: flex;\n                    flex-direction: column;\n\n                    .title {\n                        font-size: .9rem;\n                    }\n\n                    .date {\n                        font-size: .7rem;\n                    }\n                }\n\n                .rate {\n                    margin-left: auto;\n                    background-color: #f0f0f0;\n                    padding: .5rem;\n                    border-radius: 2.5px;\n                }\n            }\n\n            .overview {\n                margin: 1.5rem 0;\n                font-size: .8rem;\n            }\n\n            .actions {\n                width: 100%;\n                margin-top: auto;\n                display: flex;\n                justify-content: space-evenly;\n\n                button {\n                    cursor: pointer;\n                    padding: .5rem 1rem;\n                    border: none;\n\n                    &.offline {\n                        background-color: white;\n                        border: 2px solid #f0f0f0;\n                    }\n\n                    &.online {\n                        background-color: #f0f0f0;\n                    }\n                }\n            }\n        }\n    }\n\n    @media (min-width: 650px) {\n        .container-box {\n            flex-direction: row;\n            height: 450px;\n            margin: auto;\n            padding: 1rem 0;\n\n            img {\n                width: 30%;\n                height: 100%;\n                padding: 0 1rem;\n            }\n\n            .content {\n                width: 70%;\n                height: 100%;\n                padding: 0 1rem;\n\n                .header {\n                    .title-date {\n                        .title {\n                            font-size: 1.2rem;\n                        }\n\n                        .date {\n                            font-size: .75rem;\n                        }\n                    }\n\n                    .rate {\n                        margin-left: auto;\n                        background-color: #f0f0f0;\n                        padding: .5rem;\n                        border-radius: 2.5px;\n                    }\n                }\n\n                .overview {\n                    font-size: 1rem;\n                }\n            }\n        }\n    }\n\n    @media (min-width: 1024px) {\n        .container-box {\n            width: 80%;\n        }\n    }\n\n    @media(min-width: 1200px) {\n        .container-box {\n            width: 60%;\n        }\n    }\n`;\n\nexport default MovieOverlayStyled;","import React, { useContext } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nimport {\n    CLOSE_OVERLAY,\n    Context\n} from '../../store';\n\nimport MovieOverlayStyled from './MovieOverlayStyled';\n\nconst MovieOverlay = () => {\n    const { state, dispatch } = useContext(Context);\n    const { selectedMovie: { image, title, rate, release_date, overview } } = state;\n\n    const handleClose = () => {\n        dispatch({ type: CLOSE_OVERLAY })\n    };\n\n    return (\n        <MovieOverlayStyled onClick={handleClose}>\n            <div className=\"container-box\" onClick={(e) => e.stopPropagation()}>\n                <IconButton className=\"close\" onClick={handleClose}>\n                    <CancelIcon />\n                </IconButton>\n                <img src={image} alt={title} />\n                <div className=\"content\">\n                    <div className=\"header\">\n                        <div className=\"title-date\">\n                            <span className=\"title\">{title}</span>\n                            <span className=\"date\">{release_date}</span>\n                        </div>\n                        <span className=\"rate\">{rate}</span>\n                    </div>\n                    <div className=\"overview\">\n                        {overview}\n                    </div>\n                    <div className=\"actions\">\n                        <button className=\"offline\">Watch Offline</button>\n                        <button className=\"online\">Watch Online</button>\n                    </div>\n                </div>\n            </div>\n        </MovieOverlayStyled>\n    );\n};\n\nexport default MovieOverlay;","import styled from 'styled-components';\n\nconst NavBarStyled = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 0 1rem;\n    background-color: #f0f0f0;\n    height: 48px;\n\n    .title {\n        font-size: 1.5rem;\n        cursor: pointer;\n    }\n\n    .menu-icon {\n        margin-left: auto;\n    }\n\n    @media (min-width: 768px) {\n        .menu-icon {\n            display: none;\n        }\n    }\n`;\n\nexport default NavBarStyled;","import React, { useContext } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport {\n    OPEN_SIDEBAR,\n    Context\n} from '../../store';\n\nimport NavBarStyled from './NavBarStyled';\n\nconst NavBar = () => {\n    const { dispatch } = useContext(Context);\n\n    return (\n        <NavBarStyled>\n            <h1 className=\"title\">Movie Finder</h1>\n            <IconButton className=\"menu-icon\" onClick={() => dispatch({ type: OPEN_SIDEBAR })}>\n                <MenuIcon style={{ color: 'black' }} />\n            </IconButton>\n        </NavBarStyled>\n    );\n};\n\nexport default NavBar;","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {\n    ADD_OR_REMOVE_GENRE_FILTER,\n    Context\n} from '../../store';\n\nconst Genre = ({ id, name, isFiltered }) => {\n    const { dispatch } = useContext(Context);\n\n    return (\n        <div>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        style={{ color: 'black' }}\n                        checked={isFiltered}\n                        onChange={() => dispatch({ type: ADD_OR_REMOVE_GENRE_FILTER, payload: id })} />\n                }\n                label={name}\n            />\n        </div>\n    );\n};\n\nGenre.propTypes = {\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    isFiltered: PropTypes.bool\n};\n\nexport default Genre;","import styled from 'styled-components';\n\nconst GenreListStyled = styled.div`\n    margin-bottom: 1rem;\n\n    .title {\n        margin-bottom: 1rem;\n    }\n\n    @media (min-width: 650px) {\n        .genres {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n        }\n    }\n\n    @media (min-width: 768px) {\n        .genres {\n            display: block;\n        }\n    }\n`;\n\nexport default GenreListStyled;","import React, { useContext } from 'react';\n\nimport Genre from '../Genre/Genre';\n\nimport {\n    Context\n} from '../../store';\n\nimport GenreListStyled from './GenreListStyled';\n\nconst GenreList = () => {\n    const { state } = useContext(Context);\n    const { genres, filteredGenres } = state;\n\n    return (\n        <GenreListStyled>\n            <h1 className=\"title\">Genres</h1>\n            <div className=\"genres\">\n            {\n                genres.map((genre) => (\n                    <Genre\n                        key={genre.id}\n                        isFiltered={filteredGenres.has(genre.id)}\n                        {...genre}\n                    />\n                ))\n            }\n            </div>\n        </GenreListStyled>\n    );\n};\n\nexport default GenreList;","import styled from 'styled-components';\n\nconst FilterStyled = styled.div`\n    padding: 1rem;\n    background-color: #f0f0f0;\n    height: 100%;\n\n    .container {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        overflow-y: scroll;\n\n        .filter {\n            margin-top: auto;\n            padding: .5rem 0;\n            border: 1px solid black;\n            background-color: white;\n            font-size: .8rem;\n            border-radius: 5px;\n            cursor: pointer;\n        }\n    }\nß\n    @media (min-width: 650px) {\n        height: 100%;\n        justify-content: space-between;\n    }\n\n    @media (min-width: 768px) {\n        margin: 0;\n    }\n`;\n\nexport default FilterStyled;","import React, { useContext } from 'react';\n\nimport GenreList from '../GenreList/GenreList';\n\nimport {\n    FILTER_MOVIES,\n    Context\n} from '../../store';\n\nimport FilterStyled from './FilterStyled';\n\nconst Filter = () => {\n    const { dispatch } = useContext(Context);\n\n    return (\n        <FilterStyled>\n            <div className=\"container\">\n                <GenreList />\n                <button className=\"filter\" onClick={() => dispatch({ type: FILTER_MOVIES })}>Filter</button>\n            </div>\n        </FilterStyled>\n    );\n};\n\nexport default Filter;","import styled from 'styled-components';\n\nconst SideBarStyled = styled.div`\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: #f0f0f0;\n    padding: 1.5rem 1rem;\n    display: flex;\n    flex-direction: column;\n    z-index: 1;\n\n    .close {\n        display: flex;\n\n        button {\n            margin-left: auto;\n            width: 24px;\n            height: 24px;\n        }\n    }\n\n    @media (min-width: 768px) {\n        display: none;\n    }\n`;\n\nexport default SideBarStyled;","import React, { useContext } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Filter from '../Filter/Filter';\n\nimport {\n    CLOSE_SIDEBAR,\n    Context\n} from '../../store';\n\nimport SideBarStyled from './SideBarStyled';\n\nconst SideBar = () => {\n    const { state, dispatch } = useContext(Context);\n    const { isSideBarVisible } = state;\n\n    return (\n        <>\n        {\n            isSideBarVisible\n            ?\n                <SideBarStyled>\n                    <div className=\"close\">\n                        <IconButton onClick={() => dispatch({ type: CLOSE_SIDEBAR })}>\n                            <CloseIcon />\n                        </IconButton>\n                    </div>\n                    <Filter />\n                </SideBarStyled>\n            : null\n        }\n        </>\n    );\n};\n\nexport default SideBar;","import axios from 'axios';\n\nexport default async (urlToRetrieveFrom, responseHandler) => {\n    let data = [];\n    try {\n        const axiosResponse = await axios.get(urlToRetrieveFrom);\n        data = responseHandler(axiosResponse.data);\n    } catch (err) {\n        console.error(err);\n    }\n\n    return data;\n};","// Movie db API\nexport const API_PATH = 'https://api.themoviedb.org/3';\nexport const API_IMAGE_PATH = 'https://image.tmdb.org/t/p/w500';\nexport const API_KEY = process.env.REACT_APP_MOVIE_DB_API_KEY;\nexport const API_GENRES_PATH = '/genre/movie/list';\nexport const API_TOP_RATED_PATH = '/movie/top_rated';\nexport const API_SEARCH_PATH = '/search/movie';\n\n// Local storage\nexport const LOCAL_STORAGE_TOP_RATED = 'ls_top_rated';\nexport const LOCAL_STORAGE_GENRES = 'ls_genres';\n\nexport const DEFAULT_IMAGE = process.env.PUBLIC_URL + '/default.png';","import {\n    API_IMAGE_PATH,\n    DEFAULT_IMAGE\n} from '../constants';\n\nexport default (movie) => {\n    return {\n        id: movie.id,\n        image: movie.poster_path ? `${API_IMAGE_PATH}/${movie.poster_path}` : DEFAULT_IMAGE,\n        title: movie.title,\n        rate: movie.vote_average,\n        release_date: movie.release_date,\n        overview: movie.overview,\n        genres: movie.genre_ids\n    };\n};","import styled from 'styled-components';\n\nconst SearchStyled = styled.div`\n    display: flex;\n\n    input[type=text] {\n        flex: 1;\n        padding: 0 1rem;\n        font-size: .8rem;\n        border: 1px solid #f0f0f0;\n    }\n\n    button {\n        background-color: #f0f0f0;\n        border-radius: unset;\n    }\n`;\n\nexport default SearchStyled;","import React, { useContext, useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport {\n    SET_MOVIES,\n    Context\n} from '../../store';\n\nimport retrieveData from '../../helpers/retrieve-data';\nimport mapApiMovieToLocalMovie from '../../helpers/map-api-movie-to-local-movie';\n\nimport {\n    API_PATH,\n    API_SEARCH_PATH,\n    API_KEY\n} from '../../constants';\n\nimport SearchStyled from './SearchStyled';\n\nconst Search = () => {\n    const { dispatch } = useContext(Context);\n\n    const [searchInput, setSearchInput] = useState('');\n\n    const handleChange = (e) => {\n        const { value } = e.target;\n        setSearchInput(value);\n    };\n\n    const handleSearch = async () => {\n        if (searchInput === '') return;\n\n        const searchQuery = encodeURI(searchInput.trim());\n        const searchUrl = `${API_PATH}${API_SEARCH_PATH}?api_key=${API_KEY}&query=${searchQuery}`;\n        const data = await retrieveData(searchUrl, (response) => {\n            const movies = response.results;\n            return movies.map(mapApiMovieToLocalMovie);\n        });\n\n        dispatch({ type: SET_MOVIES, payload: data });\n\n        setSearchInput('');\n    };\n\n    return (\n        <SearchStyled>\n            <input type=\"text\" placeholder=\"Search movie\" value={searchInput} onChange={handleChange} autoFocus />\n            <IconButton onClick={handleSearch}>\n                <SearchIcon style={{ color: 'black' }} />\n            </IconButton>\n        </SearchStyled>\n    );\n};\n\nexport default Search;","import styled from 'styled-components';\n\nconst MovieStyled = styled.div`\n    border: 1px solid #f0f0f0;\n    display: flex;\n    flex-direction: column;\n    height: 350px;\n\n    img {\n        width: 100%;\n        height: 250px;\n        cursor: pointer;\n    }\n\n    .content {\n        padding: 1rem .5rem;\n        flex: 1;\n        display: flex;\n        align-items: center;\n\n        .header {\n            display: flex;\n            align-items: center;\n\n            .title {\n                font-size: .9rem;\n                font-weight: bolder;\n            }\n\n            .rate {\n                margin-left: auto;\n                background-color: #f0f0f0;\n                padding: .5rem;\n                border-radius: 2.5px;\n            }\n        }\n\n        .overview {\n            display: none;\n        }\n    }\n\n    @media (min-width: 768px) {\n        flex-direction: row;\n        padding: .5rem;\n        height: 300px;\n\n        img {\n            width: 35%;\n            height: 100%;\n        }\n\n        .content {\n            width: 65%;\n            flex-direction: column;\n            padding-left: 1rem;\n\n            .header {\n                width: 100%;\n\n                title {\n                    font-size: 1rem;\n                }\n            }\n\n            .overview {\n                display: block;\n                margin-top: 1.1rem;\n                overflow:hidden;\n                font-size: .85rem;\n            }\n        }\n    }\n`;\n\nexport default MovieStyled;","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    OPEN_OVERLAY,\n    Context\n} from '../../store';\n\nimport MovieStyled from './MovieStyled';\n\nconst Movie = ({ movie }) => {\n    const { dispatch } = useContext(Context);\n\n    const { image, title, rate, overview } = movie;\n\n    return (\n        <MovieStyled>\n            <img src={image} alt={title} onClick={() => dispatch({ type: OPEN_OVERLAY, payload: movie })} />\n            <div className=\"content\">\n                <div className=\"header\">\n                    <span className=\"title\">{title}</span>\n                    <span className=\"rate\">{rate}</span>\n                </div>\n                <div className=\"overview\">{overview}</div>\n            </div>\n        </MovieStyled>\n    );\n};\n\nMovie.propTypes = {\n    movie: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        image: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        rate: PropTypes.number.isRequired,\n        release_date: PropTypes.string.isRequired,\n        overview: PropTypes.string.isRequired\n    }).isRequired\n};\n\nexport default Movie;","import styled from 'styled-components';\n\nconst MovieListStyled = styled.div`\n    max-height: 100%;\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: .5rem;\n    margin-top: 1rem;\n    overflow-y: scroll;\n\n    @media (min-width: 450px) {\n        grid-template-columns: repeat(3, 1fr);\n    }\n\n    @media (min-width: 650px) {\n        grid-template-columns: repeat(4, 1fr);\n    }\n\n    @media (min-width: 768px) {\n        grid-template-columns: repeat(1, 1fr);\n    }\n\n    @media (min-width: 1200px) {\n        grid-template-columns: repeat(2, 1fr);\n    }\n`;\n\nexport default MovieListStyled;","import React, { useContext } from 'react';\n\nimport Movie from '../Movie/Movie';\n\nimport { Context } from '../../store';\n\nimport MovieListStyled from './MovieListStyled';\n\nconst MovieList = () => {\n    const { state } = useContext(Context);\n    const { filteredMovies: movies } = state;\n\n    return (\n        <MovieListStyled>\n        {\n            movies.map((movie) => <Movie key={movie.id} movie={movie} />)\n        }\n        </MovieListStyled>\n    );\n};\n\nexport default MovieList;","import styled from 'styled-components';\n\nconst BodyStyled = styled.div`\n    display: flex;\n    width: 100%;\n    padding: 2rem 1.5rem;\n    flex: 1;\n    overflow: auto;\n\n    .filters {\n        display: none;\n    }\n\n    .main {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        padding: 0 1rem;\n    }\n\n    @media (min-width: 768px) {\n        .filters {\n            display: block;\n            width: 30%;\n        }\n\n        .main {\n            width: 70%;\n        }\n    }\n\n    @media (min-width: 1200px) {\n        .filters {\n            width: 20%;\n        }\n\n        .main {\n            width: 80%;\n        }\n    }\n`;\n\nexport default BodyStyled;","import React from 'react';\n\nimport SideBar from '../SideBar/SideBar';\nimport Filter from '../Filter/Filter';\nimport Search from '../Search/Search';\nimport MovieList from '../MovieList/MovieList';\n\nimport BodyStyled from './BodyStyled';\n\nconst Body = () => (\n    <BodyStyled>\n        <SideBar />\n        <div className=\"filters\">\n            <Filter />\n        </div>\n        <div className=\"main\">\n            <Search />\n            <MovieList />\n        </div>\n    </BodyStyled>\n);\n\nexport default Body;","import styled from 'styled-components';\n\nconst AppStyled = styled.div`\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n\n    .body {\n        display: flex;\n        flex-direction: column;\n    }\n`;\n\nexport default AppStyled;","import React, { useContext, useEffect } from 'react';\n\nimport MovieOverlay from './components/MovieOverlay/MovieOverlay';\nimport NavBar from './components/NavBar/NavBar';\nimport Body from './components/Body/Body';\n\nimport {\n    SET_GENRES,\n    SET_MOVIES,\n    Context\n} from './store';\n\nimport retrieveData from './helpers/retrieve-data';\nimport mapApiMovieToLocalMovie from './helpers/map-api-movie-to-local-movie';\n\nimport {\n    API_PATH,\n    API_KEY,\n    API_GENRES_PATH,\n    API_TOP_RATED_PATH,\n    LOCAL_STORAGE_GENRES,\n    LOCAL_STORAGE_TOP_RATED\n} from './constants';\n\nimport AppStyled from './AppStyled';\n\nconst App = () => {\n    const { state, dispatch } = useContext(Context);\n\n    useEffect(() => {\n        const loadFromLocalStorageOrRetrieveData = async (localStorageKey, urlToRetrieveFrom, responseHandler) => {\n            if (localStorage.getItem(localStorageKey)) {\n                const data = JSON.parse(localStorage.getItem(localStorageKey));\n                return data;\n            }\n\n            const data = await retrieveData(urlToRetrieveFrom, responseHandler);\n            localStorage.setItem(localStorageKey, JSON.stringify(data));\n            return data;\n        };\n\n        const loadGenres = async () => {\n            const genresUrl = `${API_PATH}${API_GENRES_PATH}?api_key=${API_KEY}`;\n            const data = await loadFromLocalStorageOrRetrieveData(LOCAL_STORAGE_GENRES, genresUrl, (response) => {\n                return response.genres;\n            });\n\n            dispatch({ type: SET_GENRES, payload: data});\n        };\n\n        const loadTopRatedMovies = async () => {\n            const topRatedMoviesUrl = `${API_PATH}${API_TOP_RATED_PATH}?api_key=${API_KEY}`;\n            const data = await loadFromLocalStorageOrRetrieveData(LOCAL_STORAGE_TOP_RATED, topRatedMoviesUrl, (response) => {\n                const _movies = response.results;\n                return _movies.map(mapApiMovieToLocalMovie);\n            });\n\n            dispatch({ type: SET_MOVIES, payload: data });\n        };\n\n        loadGenres();\n        loadTopRatedMovies();\n    }, [dispatch]);\n\n    const { isOverlayVisible } = state;\n\n    return (\n        <AppStyled>\n            { isOverlayVisible && <MovieOverlay /> }\n            <NavBar />\n            <Body />\n        </AppStyled>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport { ContextProvider } from './store';\n\nimport './index.css';\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}